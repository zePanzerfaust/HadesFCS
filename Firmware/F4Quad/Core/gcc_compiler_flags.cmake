# common
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -ffunction-sections")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -fdata-sections")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -fno-common")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -fmessage-length=0")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -fsigned-char")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -ffreestanding")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -fno-move-loop-invariants")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -pedantic")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -w")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wunused")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wuninitialized")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wall")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wextra")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wmissing-declarations")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wconversion")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wpointer-arith")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wpadded")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wshadow")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wlogical-op")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Waggregate-return")
set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -Wfloat-equal")
#set(CMAKE_COMMON_FLAGS "${CMAKE_COMMON_FLAGS} -flto")

set(CMAKE_C_FLAGS_COMMON "${CMAKE_C_FLAGS_COMMON} -std=c99")
set(CMAKE_C_FLAGS_COMMON "${CMAKE_C_FLAGS_COMMON} -Wmissing-prototypes")
set(CMAKE_C_FLAGS_COMMON "${CMAKE_C_FLAGS_COMMON} -Wstrict-prototypes")
set(CMAKE_C_FLAGS_COMMON "${CMAKE_C_FLAGS_COMMON} -Wbad-function-cast") # -Wa,-adhlns=\"$@.lst\"

set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -std=c++11")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -fabi-version=0")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -fno-exceptions")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -fno-rtti")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -fno-use-cxa-atexit")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -fno-threadsafe-statics")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -Wabi")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -Wctor-dtor-privacy")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -Wnoexcept")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -Wnon-virtual-dtor")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -Wstrict-null-sentinel")
set(CMAKE_CXX_FLAGS_COMMON "${CMAKE_CXX_FLAGS_COMMON} -Wsign-promo") # -Wa,-adhlns=\"$@.lst\"

set(DEBUG_SPECIFIC_FLAGS "${DEBUG_SPECIFIC_FLAGS} -Og")
set(DEBUG_SPECIFIC_FLAGS "${DEBUG_SPECIFIC_FLAGS} -g3")

set(RELEASE_SPECIFIC_FLAGS "${RELEASE_SPECIFIC_FLAGS} -Os")
set(RELEASE_SPECIFIC_FLAGS "${RELEASE_SPECIFIC_FLAGS} -g0")

# debug
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_COMMON_FLAGS} ${CMAKE_C_FLAGS_COMMON} ${DEBUG_SPECIFIC_FLAGS}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_COMMON_FLAGS} ${CMAKE_CXX_FLAGS_COMMON} ${DEBUG_SPECIFIC_FLAGS}")

# release
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_COMMON_FLAGS} ${CMAKE_C_FLAGS_COMMON} ${RELEASE_SPECIFIC_FLAGS}")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_COMMON_FLAGS} ${CMAKE_CXX_FLAGS_COMMON} ${RELEASE_SPECIFIC_FLAGS}")
